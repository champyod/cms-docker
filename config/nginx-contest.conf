upstream cms_contest {
    least_conn;
    server cms-contest-web-server-${CONTEST_ID}:${CONTEST_LISTEN_PORT};
}

# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name ${NGINX_HOST};
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name ${NGINX_HOST};
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Client request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Timeouts
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    
    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Root location
    location / {
        proxy_pass http://cms_contest;
        proxy_redirect off;
    }
    
    # WebSocket support (if needed)
    location /ws {
        proxy_pass http://cms_contest;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        proxy_pass http://cms_contest;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }
    
    # Logging
    access_log /var/log/nginx/cms_contest_access.log;
    error_log /var/log/nginx/cms_contest_error.log;
}
